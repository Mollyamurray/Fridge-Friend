/**
 * Write a description of class User here.
 * 
 * @author (your name) 
 * @version (a version number or a date)
 */

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

public class User
{
    // instance variables - replace the example below with your own
    private ArrayList<Food> fridge = new ArrayList<Food>();
    private String name;
    PrintWriter writer = null;
    /**
     * Constructor for objects of class User
     * @throws IOException 
     * @throws FileNotFoundException 
     */
    public User(String name)
    {
        // initialize instance variables
        this.name = name;
    }

    public String getName()
	{
		return name;
	}

	public void setFridge() throws IOException
    {
    	 this.getFoodFromFile(this);
    }
    
    public ArrayList<Food> getFridge()
	{
		return fridge;
	}

	public void printFridge() {
	    Date today = new Date();
	    SimpleDateFormat dateFormat = new SimpleDateFormat("MM dd yyyy");
	    dateFormat.format(today);
		for (Food f : fridge) {
			long daysTilExp = f.getDifferenceDays(today, f.getExpiration());
			if(daysTilExp > 0)
			{
	        System.out.println(f.getName() + " expires in " + daysTilExp + " days");
			}	
			else if(daysTilExp <= 0)
			{
	        System.out.println(f.getName() + " is expired!");
			}	  
		}
	}

	public void addFood(Food f) {
        fridge.add(f);
    }
    public void writeFoodToFile( User current )
    {
    	
		try {
				writer = new PrintWriter(new FileWriter(current.getName() + ".txt", false));
		} catch (IOException e) {
				e.printStackTrace();
			
		}
		for(Food f : fridge)
		{
    	writer.println(f.toString());
		}
    	writer.close();
    }
    public void getFoodFromFile( User current )
    {
        fridge.clear();
    	BufferedReader br = null;
    	try {
			br = new BufferedReader((new FileReader( current.getName() + ".txt" )));
		} catch (FileNotFoundException e1) {
			
			this.writeFoodToFile(current);
			try {
				br = new BufferedReader((new FileReader( current.getName() + ".txt" )));
			} catch (FileNotFoundException e) {
			
				e.printStackTrace();
			}
		}
		
        String nothing = ": null";
        String line = null;
		try {
			line = br.readLine();
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
 
		if(line == null)
        {
        	System.out.println("There's no food in your fridge!");    	
        }
		
		else if(line.equals(nothing))
        {
        	System.out.println("There's no food in your fridge!");    	
        }
        
        else
        {
        	while( line != null )
        	
        {
            String str = line;
            String strList[] = str.split("-%-");
            
            SimpleDateFormat dateFormat = new SimpleDateFormat("MM dd yyyy");
	    	
            Food f = null;
			try {
				f = new Food( strList[0], dateFormat.parse(strList[1]));
			} catch (ParseException e) {
				e.printStackTrace();
			}
            
            this.addFood( f );

            try {
				line = br.readLine();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
        }
        try {
			br.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        }
		
		
		}   
    

	public void removeFood(String fName) {
		int size = fridge.size();
		for (int i=size-1; i> -1; i--) {
		    if (fridge.get(i).getName().equals(fName) ) {
		        fridge.remove(i);
		    }
		}
		this.writeFoodToFile(this);
		
	}
    
    
}
